@model PagedList.IPagedList<FoodOnline.Models.Product>
@using PagedList.Mvc;

@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Product Manage";
    int rowNo = 0;
}

<p>
    <button type="button" class="btn-create" onclick="location.href='@Url.Action("Create", "Products")'">
        <img src='@Url.Content("~/Areas/Content/assets/images/icon/add.png")' height="27" alt="Create New" title="Create New" />
        Create New
    </button>
</p>

<div class="mt-5">
    <div id="datatable-buttons_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
        <div class="row">
            <div class="col-sm-12 col-md-6">
                <div class="dt-buttons btn-group">
                    <button class="btn btn-secondary buttons-copy buttons-html5" tabindex="0" aria-controls="datatable-buttons" type="button">
                        <span>Copy</span>
                    </button>
                    <button class="btn btn-secondary buttons-pdf buttons-html5" tabindex="0" aria-controls="datatable-buttons" type="button">
                        <span>PDF</span>
                    </button>
                </div>
            </div>
            <div class="col-sm-12 col-md-6">
                <!-- search -->
                @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                {
                    <p>
                        @*Search:*@ @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Search" />

                        &nbsp;&nbsp;&nbsp;&nbsp;

                        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                        {
                            <span>
                                Page size: @Html.DropDownList("size", (List<SelectListItem>)ViewBag.size, new { @onchange = "this.form.submit();" })
                            </span>
                        }

                    </p>
                }
                <!-- kết thúc -->
                <!--<div id="datatable-buttons_filter" class="dataTables_filter">-->
                @*<label>
                        Search:<input type="search" class="form-control form-control-sm" placeholder="" aria-controls="datatable-buttons">
                    </label>*@
                <!--</div>-->
            </div>
        </div>

        @*<div class="row">
            <div class="col-sm-12">
                <table id="datatable-buttons" class="table table-striped table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">*@


        <div class="card-body table-responsive p-0">
            <table class="table table-hover text-nowrap">
                <thead @*style="background-color: #6c757d; color: #fff"*@>

                    <tr>
                        <th> STT </th>
                        <th> Category </th>
                        <th>
                            @Html.ActionLink("Name Food", "Index", new { sortOrder = ViewBag.NameSortParm, size = ViewBag.currentSize })
                        </th>
                        <th>Image</th>
                        <th>
                            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.Price, size = ViewBag.currentSize })
                        </th>
                        <th> Promotion </th>
                        <th> Status </th>
                        @*<th> Start Time</th>
                            <th> End Time </th>*@
                        <th> Task Manager </th>
                    </tr>

                </thead>

                @foreach (var item in Model)
                {
                    if (item.IsDelete == true)
                    {
                        <tr>
                            <td>@(rowNo += 1)</td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category.NameCategory)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NameProduct)
                            </td>
                            <td>
                                <img src="~/Areas/UploadedFiles/@item.Img" width="100" height="90" />
                            </td>
                            <td>
                                @if (item.StartTimePromotion < DateTime.Now && item.EndTimePromotion > DateTime.Now)
                                {
                                    <del>@Html.DisplayFor(modelItem => item.Price)</del>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Price)

                                }
                            </td>
                            <td>
                                @if (item.EndTimePromotion < DateTime.Now)
                                {
                                    <del>@Html.DisplayFor(modelItem => item.Promotion)</del>
                                }
                                else if (item.StartTimePromotion > DateTime.Now)
                                {
                                    <span style="color: #acadaf">
                                        @Html.DisplayFor(modelItem => item.Promotion)
                                    </span>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Promotion)
                                }
                            </td>
                            <td>
                                @if (item.StartTimePromotion <= DateTime.Now && item.EndTimePromotion >= DateTime.Now)
                                {
                                    <span class="badge bg-success">Promotion running</span>
                                }
                                else if (item.EndTimePromotion < DateTime.Now)
                                {
                                    <span class="badge bg-error">End of promotion</span>
                                }
                                else if (item.StartTimePromotion > DateTime.Now)
                                {
                                    <span class="badge bg-warning">Promotion not yet applied</span>
                                }
                                else
                                {
                                    <span class="badge bg-no">No promotion</span>
                                }
                            </td>
                            @*<td>

                                        @Html.DisplayFor(modelItem => item.StartTimePromotion)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EndTimePromotion)
                                </td>*@
                            <td>
                                <button type="button" class="btn-edit" onclick="location.href='@Url.Action("Edit", "Products", new { id = item.IdProduct })'">
                                    Edit/Details
                                </button>
                                <button type="button" class="btn-submit" onclick="location.href='@Url.Action("Delete", "Products", new { id = item.IdProduct })'">
                                    Delete
                                </button>
                                @*@Html.ActionLink("Edit", "Edit", new { id = item.IdProduct }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.IdProduct }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.IdProduct })*@
                            </td>
                        </tr>
                    }

                }

            </table>

        </div>

        <br />
        <!-- phân trang -->
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

        <!-- Kết thúc -->
    </div>

</div>
